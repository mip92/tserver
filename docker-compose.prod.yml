version: "3.8"

services:
  # База данных PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: tattoo-database-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - tattoo-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: tattoo-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_EXPIRES_IN: ${JWT_ACCESS_TOKEN_EXPIRES_IN:-15m}
      JWT_REFRESH_TOKEN_EXPIRES_IN: ${JWT_REFRESH_TOKEN_EXPIRES_IN:-7d}
      PORT: 3000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - tattoo-network
    ports:
      - "3000:3000"

volumes:
  postgres_data_prod:

networks:
  tattoo-network:
    driver: bridge
