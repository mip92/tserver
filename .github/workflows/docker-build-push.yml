name: Build and Push Backend Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: mip92/tattoo-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.title=Tattoo Backend Server
            org.opencontainers.image.description=NestJS Backend API for Tattoo application
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

      - name: Success message
        run: |
          echo "‚úÖ Docker image successfully built and pushed to Docker Hub!"
          echo "üê≥ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "üè∑Ô∏è  Tags: latest, ${{ github.sha }}, v${{ github.run_number }}"
          echo ""
          echo "üìã –î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ:"
          echo "   docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "   docker-compose -f docker-compose.prod.yml up -d"

  deploy-to-nginx:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout tattoo repository
        uses: actions/checkout@v4
        with:
          repository: mip92/tattoo
          token: ${{ secrets.PAT_TOKEN }}
          path: tattoo

      - name: Check for changes
        id: check-changes
        run: |
          cd tattoo
          if git diff --quiet HEAD~1 HEAD; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            echo "No changes detected, skipping deployment"
          else
            echo "no_changes=false" >> $GITHUB_OUTPUT
            echo "Changes detected, proceeding with deployment"
          fi

      - name: Debug repository dispatch
        if: steps.check-changes.outputs.no_changes == 'false'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üîç Debug info:"
          echo "Repository: mip92/tattoo"
          echo "Event type: deploy-backend"
          echo "Token exists: $([[ -n "$PAT_TOKEN" ]] && echo true || echo false)"
          echo "Token length: ${#PAT_TOKEN}"
          echo "Token preview: ${PAT_TOKEN:0:10}..." # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤

      - name: Test API access
        if: steps.check-changes.outputs.no_changes == 'false'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üß™ Testing API access to tattoo repository..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token $PAT_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/mip92/tattoo")
          echo "API Response Code: $RESPONSE"

          if [ "$RESPONSE" = "200" ]; then
            echo "‚úÖ API access successful"
          else
            echo "‚ùå API access failed with code: $RESPONSE"
          fi

      - name: Trigger deployment action
        if: steps.check-changes.outputs.no_changes == 'false'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üöÄ Triggering deployment action in tattoo repository..."

          # –ò—Å–ø–æ–ª—å–∑—É–µ–º GitHub API –¥–ª—è repository_dispatch
          curl -X POST \
            -H "Authorization: token $PAT_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d '{
              "event_type": "deploy-backend",
              "client_payload": {
                "backend_image": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
              }
            }' \
            "https://api.github.com/repos/mip92/dispatches"

          echo "‚úÖ Repository dispatch event sent via API"
