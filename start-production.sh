#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ Production –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å production –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    echo "üí° –ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:"
    cat << EOF
# Production Database Configuration (–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
POSTGRES_USER=tattoo
POSTGRES_PASSWORD=tattoo_prod_pass_secure
POSTGRES_DB=tattoo_db
DATABASE_URL=postgresql://tattoo:tattoo_prod_pass_secure@database:5432/tattoo_db

# Server Configuration
NODE_ENV=production
PORT=3000

# JWT Configuration (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏–∑–º–µ–Ω–∏—Ç–µ –≤ production!)
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_ACCESS_TOKEN_EXPIRES_IN=15m
JWT_REFRESH_TOKEN_EXPIRES_IN=7d

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
LOG_LEVEL=info
CORS_ORIGIN=https://yourdomain.com
EOF
    exit 1
fi

echo "‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod.yml down

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ volumes (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è  –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ volumes..."
    docker volume rm tserver_postgres_data_prod 2>/dev/null || true
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º production –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é production –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö..."
docker-compose -f docker-compose.prod.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ –ñ–¥—É –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose -f docker-compose.prod.yml ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üìã –õ–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
docker-compose -f docker-compose.prod.yml logs database --tail=20

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
if docker exec -it tattoo-database-prod pg_isready -U tattoo -d tattoo_db >/dev/null 2>&1; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    echo "üìã –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
    docker-compose -f docker-compose.prod.yml logs database
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é backend..."
sleep 10
if curl -s http://localhost:3000/health >/dev/null; then
    echo "‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìã –õ–æ–≥–∏ backend:"
    docker-compose -f docker-compose.prod.yml logs backend --tail=20
fi

echo ""
echo "üéâ Production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å:"
docker-compose -f docker-compose.prod.yml ps
echo ""
echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:"
echo "   - Health: http://localhost:3000/health"
echo "   - GraphQL: http://localhost:3000/graphql"
echo "   - Database: localhost:5432"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   - –õ–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs -f"
echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.prod.yml down"
echo "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.prod.yml restart"
echo ""
echo "üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
echo "   - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: docker exec -it tattoo-database-prod psql -U tattoo -d tattoo_db"
echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞: docker exec -it tattoo-database-prod psql -U tattoo -d tattoo_db -c '\dt'"
