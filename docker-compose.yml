services:
  # PostgreSQL database
  database:
    image: postgres:16-alpine
    container_name: tattoo-database
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - tattoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS server
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tattoo-server
    restart: unless-stopped
    ports:
      - "${PORT:-4000}:4000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_EXPIRES_IN: ${JWT_ACCESS_TOKEN_EXPIRES_IN:-15m}
      JWT_REFRESH_TOKEN_EXPIRES_IN: ${JWT_REFRESH_TOKEN_EXPIRES_IN:-7d}
      # Cloudflare R2 Configuration
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_PUBLIC_DOMAIN: ${S3_PUBLIC_DOMAIN}
      # CORS Configuration
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      # Brevo API Configuration
      BREVO_API_KEY: ${BREVO_API_KEY}
      BREVO_FROM_EMAIL: ${BREVO_FROM_EMAIL}
      # SMS Configuration
      KYIVSTAR_CLIENT_ID: ${KYIVSTAR_CLIENT_ID}
      KYIVSTAR_CLIENT_SECRET: ${KYIVSTAR_CLIENT_SECRET}
      KYIVSTAR_API_URL: ${KYIVSTAR_API_URL}
      SMS_SENDER: ${SMS_SENDER}
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/app # Mount entire project
      - /app/dist # Exclude dist from mounting
    networks:
      - tattoo-network
    command: npm run start:dev

  # Migration service for production database
  migration:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tattoo-migration
    environment:
      NODE_ENV: production
      # Production database connection (use host.docker.internal for Docker)
      DATABASE_URL: ${PRODUCTION_DATABASE_URL}
      # Use local JWT secret for migration
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_TOKEN_EXPIRES_IN: ${JWT_ACCESS_TOKEN_EXPIRES_IN:-15m}
      JWT_REFRESH_TOKEN_EXPIRES_IN: ${JWT_REFRESH_TOKEN_EXPIRES_IN:-7d}
      # Cloudflare R2 Configuration
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_PUBLIC_DOMAIN: ${S3_PUBLIC_DOMAIN}
      # CORS Configuration
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      # Brevo API Configuration
      BREVO_API_KEY: ${BREVO_API_KEY}
      BREVO_FROM_EMAIL: ${BREVO_FROM_EMAIL}
      # SMS Configuration
      KYIVSTAR_CLIENT_ID: ${KYIVSTAR_CLIENT_ID}
      KYIVSTAR_CLIENT_SECRET: ${KYIVSTAR_CLIENT_SECRET}
      KYIVSTAR_API_URL: ${KYIVSTAR_API_URL}
      SMS_SENDER: ${SMS_SENDER}
    volumes:
      - .:/app
      - /app/dist
    command: npm run cli all
    networks:
      - tattoo-network
    profiles:
      - migration

volumes:
  postgres_data:

networks:
  tattoo-network:
    driver: bridge
