# Production Dockerfile для NestJS
FROM node:22-alpine AS builder

# Устанавливаем зависимости для сборки
RUN apk add --update --no-cache openssl

WORKDIR /app

# Копируем файлы зависимостей
COPY package*.json ./
COPY prisma ./prisma/

# Устанавливаем ВСЕ зависимости для сборки
RUN npm ci --production=false --no-audit --no-fund --prefer-offline --no-optional

# Копируем исходный код
COPY . .

# Генерируем Prisma клиент и собираем приложение
RUN npx prisma generate
RUN npm run build

# Production stage
FROM node:22-alpine

# Устанавливаем только production зависимости + Prisma CLI
RUN apk add --update --no-cache openssl

WORKDIR /app

# Копируем package.json
COPY package*.json ./

# Устанавливаем ТОЛЬКО production зависимости + Prisma CLI
RUN npm ci --only=production --no-audit --no-fund --prefer-offline --no-optional && \
    npm install -g prisma

# Копируем собранное приложение из builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma

# Копируем миграции
COPY prisma/migrations ./prisma/migrations

EXPOSE 3000

# Запускаем миграции и приложение
CMD ["sh", "-c", "npx prisma migrate deploy && npm run start:prod"]
