# Cursor Rules for Tattoo Server Project

## Code Style and Language Rules

### Comments and Documentation
- **ALWAYS use English for all comments and documentation**
- **MINIMIZE comments usage** - prefer self-documenting code
- Only add comments when the code logic is not obvious
- Use JSDoc for complex functions and public APIs

### Code Quality
- Write clean, self-explanatory code
- Use meaningful variable and function names
- Follow TypeScript best practices
- Use proper error handling with try-catch blocks
- Implement proper logging instead of console.log in production

### Database and Security
- Always use transactions for multi-step database operations
- Implement proper input validation
- Use parameterized queries to prevent SQL injection
- Follow OWASP security guidelines

### Authentication & Authorization
- Use token revocation (isRevoked: true) instead of deletion for security audit
- Implement proper token rotation
- Use atomic operations for token management
- Follow JWT best practices

### Performance
- Use database indexes appropriately
- Implement proper pagination
- Use connection pooling
- Optimize database queries

### Testing
- Write unit tests for business logic
- Write integration tests for API endpoints
- Use proper mocking for external dependencies

## File Structure
- Keep modules organized and focused
- Use proper separation of concerns
- Follow NestJS conventions
- Use DTOs for data validation

## Git and Version Control
- Write clear, descriptive commit messages in English
- Use conventional commits format
- Keep commits atomic and focused
- Use proper branching strategy
